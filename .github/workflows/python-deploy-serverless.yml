name: Deploy

on: 
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      cli-name:
        required: false
        type: string
      working-directory:
        required: false
        type: string
        default: "."
      dependency-hash-version:
        required: false
        type: string
        default: "v1"
      private-package-repo-url:
        description: The url of the private package repository you want to add to poetry. You must also specify `private-package-repo-username`
        type: string
        required: false
        default: ""
      aws-default-region:
        type: string
        required: false
        default: "us-east-1"
    secrets:
      private-package-repo-username:
        required: false
      private-package-repo-password:
        required: false
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build-and-deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    container: amazonlinux:2
    steps:
      - name: Install Missing Dependencies
        run: yum install -y tar gzip gcc pip
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install and Configure Poetry
        shell: bash
        working-directory: ${{inputs.working-directory}}
        run: |
          pip install poetry==1.4.1 --upgrade
          poetry config virtualenvs.in-project true
          if [ -n "${{inputs.private-package-repo-url}}" ]; then
            if [ -z "${{secrets.private-package-repo-username}}" ]; then
              echo "private-package-repo-username is required when private-package-repo-url is provided" 1>&2
              exit 1
            fi

            poetry config repositories.private "${{ inputs.private-package-repo-url }}"
            poetry config http-basic.private "${{ secrets.private-package-repo-username }}" "${{ inputs.private-package-repo-password }}"
          fi
      - name: Install Python Dependencies
        shell: bash
        working-directory: "${{inputs.working-directory}}"
        run: |
          COMMAND="poetry install"
          if [[ "${{inputs.exclude-dev-dependencies}}" != "false" ]]; then
            COMMAND="$COMMAND --no-dev"
          fi
          if [[ "${{inputs.extras}}" != "NOT_SPECIFIED" ]]; then
            COMMAND="$COMMAND -E ${{inputs.extras}}"
          fi
          eval $COMMAND

      - name: Build Code
        working-directory: ${{ inputs.working-directory }}
        if: ${{ inputs.cli-name != '' }}
        run: poetry run ${{ inputs.cli-name }} build

      - name: Generate Requirements
        working-directory: ${{ inputs.working-directory }}
        run: poetry export -f requirements.txt -o requirements.txt --with-credentials --without-hashes

      - name: Serverless Deploy to ${{ inputs.environment }}
        uses: triaxtec/github-actions/generic/serverless-deploy@v2
        with:
          environment: ${{ inputs.environment }}
          aws-default-region: ${{ inputs.aws-default-region }}
          working-directory: ${{ inputs.working-directory }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
