name: Build and Publish Client Libraries

on: 
  workflow_call:
    inputs:
      start-services-with-docker-compose:
        required: false
        type: boolean
        default: false
      custom-pre-checks-script:
        required: false
        type: string
        default: ""
      module:
        required: true
        type: string
      additional-modules-to-lint:
        description: Additional modules to be linted using the standard ruleset (i.e. not the ones used for linting unit tests).
        required: false
        type: string
        default: ""
      dependency-hash-version:
        required: false
        type: string
        default: "v1"
      private-package-repo-url:
        description: The url of the private package repository you want to add to poetry. You must also specify `private-package-repo-username`
        type: string
        required: false
        default: ""
      exclude-dev-dependencies:
        description: If set to true, poetry install will be called with the --no-dev
        type: string
        required: false
        default: "false"
      extras:
        description: Extras to include when installing this package
        type: string
        required: false
        default: NOT_SPECIFIED
      working-directory:
        description: The working directory where this action should run. Defaults to the root of the git repository.
        type: string
        required: false
        default: "."
    secrets:
      private-package-repo-username:
        required: false
      private-package-repo-password:
        required: false
      private-package-repo-push-token:
        required: true

jobs:
  build-python-client:
    name: Python Client Library
    runs-on: ubuntu-latest
    steps:
      - name: Generate OpenAPI Document
        uses: triaxtec/github-actions/python/generate-openapi-doc

      - name: Install pipx
        run: python -m pip install --user pipx

      - name: Generate Python Client
        run: python -m pipx run openapi-python-client generate --config python-generator-config.yml --path openapi.json

      - name: Publish Python Client
        uses: triaxtec/github-actions/python/publish-package@main
        with:
          token: ${{ secrets.private-package-repo-push-token }}
          private-package-repo-url: ${{ inputs.private-package-repo-url }}
          dir: ./triax-inventory-api-client

  build-and-publish-angular-client:
    name: Angular Client Library
    runs-on: ubuntu-latest
    steps:
    - name: Generate OpenAPI Document
      uses: triaxtec/github-actions/python/generate-openapi-doc

    - name: Set up Node
      uses: actions/setup-node@v2.1.4
      with:
        node-version: '14'

    - name: Generate Angular Client Library
      uses: openapi-generators/openapitools-generator-action@v1.1.1
      with:
        generator: typescript-angular
        config-file: generator-config.yml

    - name: Publish Angular Client Library
      run: |
        cd typescript-angular-client
        echo "//npm.fury.io/triaxtec/:_authToken=${{ secrets.GEMFURY_PUSH_TOKEN }}" > .npmrc
        npm install
        npm remove @types/node
        npm add -D @types/node@12.20.20
        npm run build
        npm publish dist
