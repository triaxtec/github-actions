name: Run Checks
description: Runs Triax's standard suite of checks (linting, mypy, safety, and unit tests). Assumes that any services needed for tests have been instantiated already.
inputs:
  module:
    description: The name of the module to run the checks on
    required: true
  test-dir:
    description: The directory (or path from the project root) containing the pytests to run. Defaults to "tests".
    required: false
    default: tests

runs:
  using: composite
  steps:
    - name: Run Black
      shell: bash
      run: poetry run black . --check

    - name: Run isort
      shell: bash
      run: poetry run isort . --check

    - name: bandit
      shell: bash
      run: poetry run bandit -r ${{ inputs.module }} -c pyproject.toml

    - name: Lint (source)
      shell: bash
      run: poetry run task lint

    - name: Lint (tests)
      shell: bash
      run: poetry run task lint_tests

    - name: Run safety
      shell: bash
      # 42194: Ignore safety advisory for encrypted values in sqlalchemy-utils, a feature we don't use.
      # 42050: Ignore safety advisory for more secure cookies in werkzeug, another unused feature.
      # 44715: Ignore saftey advisory for numpy.sort as there is no fix yet and we don't use the feature
      # 51668: Ignore safety advisory for sqlalchemy str(engine) including cleartext password
      # 52983: Ignore safety advisory for httpx
      # 53325: Ignore safety advisory for werkzeug
      # 53326: Ignore safety advisory for werkzeug
      # 53688: Temp ignore for redis
      # 53689: Temp ignore for redis
      # 53813: Temp ignore for sentry
      # 54456: Temp ignore for werkzeug
      run: poetry export -f requirements.txt | poetry run safety check --bare --stdin -i 42194 -i 42050 -i 44715 -i 51668 -i 52983 -i 53325 -i 53326 -i 54456 -i 53868 -i 53869 -i 53812 -i 54456

    - name: Run mypy
      shell: bash
      run: poetry run mypy --show-error-codes ${{ inputs.module }}
      
    - name: Run pytest
      shell: bash
      run: poetry run pytest --cov=${{ inputs.module }} --cov-report=term-missing ${{ inputs.test-dir }}
