name: Install Poetry and Dependencies
description: Installs/configures poetry and then installs the python dependencies.
inputs:
  private-package-repo-url:
    description: The url of the private package repository you want to add to poetry. You must also specify `private-package-repo-username`
    required: false
    default: ""
  private-package-repo-username:
    description: The username for the private package repository you want to add to poetry
    required: false
    default: ""
  private-package-repo-password:
    description: The password for the private package repository you want to add to poetry
    required: false
    default: ""
  dependency-hash-version:
    description: A quick way to generate a completely new cache if something goes awry and loading from partial cache keys is causing issues.
    required: false
    default: "v1"
  exclude-dev-dependencies:
    description: If set to true, poetry install will be called with the --no-dev
    required: false
    default: "false"
  extras:
    description: Extras to include when installing this package
    required: false
    default: NOT_SPECIFIED
  working-directory:
    description: The working directory where this action should run. Defaults to the root of the git repository.
    required: false
    default: "."
  python-version:
    description: The version of python to install/use
    required: false
    default: "3.8"

runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}

    - name: Cache dependencies
      uses: triaxtec/github-actions/generic/cache-dependencies@TSD-1127-cache-dev-dependencies-separately
      with:
        path: ./.venv
        package-manager: poetry
        dependency-hash-version: ${{ inputs.dependency-hash-version }}
        dependency-lock-file: poetry.lock
        dev-dependencies-included: ${{ inputs.exclude-dev-dependencies != 'false' }}

    - name: Install and Configure Poetry
      shell: bash
      working-directory: "${{inputs.working-directory}}"
      run: |
        python -m pip install --upgrade pip
        pip install poetry==1.1.8 poetry-core==1.0.4 --upgrade
        poetry config virtualenvs.in-project true
        if [ -n "${{inputs.private-package-repo-url}}" ]; then
          if [ -z "${{inputs.private-package-repo-username}}" ]; then
            echo "private-package-repo-username is required when private-package-repo-url is provided" 1>&2
            exit 1
          fi

          poetry config repositories.private "${{ inputs.private-package-repo-url }}"
          poetry config http-basic.private "${{ inputs.private-package-repo-username }}" "${{ inputs.private-package-repo-password }}"
        fi
    - name: Install Python Dependencies
      shell: bash
      working-directory: "${{inputs.working-directory}}"
      run: |
        COMMAND="poetry install"
        if [[ "${{inputs.exclude-dev-dependencies}}" != "false" ]]; then
          COMMAND="$COMMAND --no-dev"
        fi
        if [[ "${{inputs.extras}}" != "NOT_SPECIFIED" ]]; then
          COMMAND="$COMMAND -E ${{inputs.extras}}"
        fi
        eval $COMMAND
