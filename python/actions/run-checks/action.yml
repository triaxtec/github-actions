name: Run Checks
description: Runs Triax's standard suite of checks (linting, mypy, safety, and unit tests). Assumes that any services needed for tests have been instantiated already.
inputs:
  module:
    description: The name of the module to run the checks on
    required: true
  additional-modules-to-lint:
    description: Additional modules to be linted using the standard ruleset (i.e. not the ones used for linting unit tests).
    required: false
    default: ""
  test-dir:
    description: The directory (or path from the project root) containing the pytests to run. Defaults to "tests".
    required: false
    default: tests

runs:
  using: composite
  steps:
    - name: Run Black
      shell: bash
      run: poetry run black . --check

    - name: Run isort
      shell: bash
      run: poetry run isort . --check

    - name: bandit
      shell: bash
      run: poetry run bandit -r ${{ inputs.module }} -s B104,B108

    - name: Lint (source)
      shell: bash
      run: poetry run pylint ${{ inputs.module }} ${{ inputs.additional-modules-to-lint}}

    - name: Lint (tests)
      shell: bash
      run: poetry run pylint --disable="R0201,W0201,W0212,W0621,W0404,C0302" ${{ inputs.test-dir }}

    - name: Run safety
      shell: bash
      # 42194: Ignore safety advisory for encrypted values in sqlalchemy-utils, a feature we don't use.
      # 42050: Ignore safety advisory for more secure cookies in werkzeug, another unused feature.
      run: poetry export -f requirements.txt | poetry run safety check --bare --stdin -i 42194 -i 42050

    - name: Run mypy
      shell: bash
      run: poetry run mypy --show-error-codes ${{ inputs.module }}
      
    - name: Run pytest
      shell: bash
      run: poetry run pytest --cov=${{ inputs.module }} --cov-report=term-missing ${{ inputs.test-dir }}
