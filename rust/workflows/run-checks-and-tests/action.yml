name: Run Rust Checks and Tests
description: "Sets up Rust, then runs all standard lints and tests on a given project"

inputs:
  github_token:
    description: "GitHub token, i.e. secrets.GITHUB_TOKEN. Is passed to the clippy check to annotate pull requests"
    required: true
  clippy_args:
    description: "Any extra arguments to pass to clippy."
    required: false
    default: "--all-features"
  use_tool_cache:
    description: "Whether to attempt to install cargo-all-features from the tool cache before compiling"
    required: false
    default: "true"
  working_directory:
    description: "Working directory to run the action in. Defaults to $GITHUB_WORKSPACE"
    required: false
    default: ${{ github.workspace }}

runs:
  using: composite
  steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: triaxtec/github-actions/rust/actions/setup@actions-vs-jobs-refactor
      with:
        components: clippy, rustfmt

    - name: Run Checks and Tests
      uses: triaxtec/github-actions/rust/actions/run-checks-and-tests@actions-vs-jobs-refactor
      with:
        github_token: ${{ inputs.github_token }}
        clippy_args: ${{ inputs.clippy_args }}
        use_tool_cache: ${{ inputs.use_tool_cache }}
        working_directory: ${{ inputs.working_directory }}
